import {NamedElement} from "./util";
import {Brick} from "./bricks";
import {State} from "./state.class";

/**
 * Application built over bricks.
 */
export class Application extends NamedElement {

    private readonly _bricks: Brick[];
    private readonly _states: State[];

    /**
     * @param {String} name: the name of the application
     * @param {Brick[]} bricks: bricks over which the application operates
     * @param {State[]} states: states of the application with the first one being the initial state
     */
    constructor(name: string, bricks: Brick[], states: State[]) {
        super(name);
        this._bricks = bricks;
        this._states = states;
    }

    /**
     * External representation: Arduino program
     * @return {string}
     */
    public export(): string {
        return `
            // generated by JavaScriptArduinoML \n
            
            ${this._bricks.map(brick => `\n${brick.declare()}`)} \n
            
            void setup() { \n
                ${this._bricks.map(brick => `\n${brick.setup()}`)} \n
            } \n
            
            int state = LOW; int prev = HIGH; \n
            long time = 0; long debounce = 200; \n
            
            ${this._states.map(state => `\n${state.setup()}`)} \n
            
            void loop() { state_${this._states[0].name}(); }
            `;
    }
}
